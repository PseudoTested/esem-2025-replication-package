{
  "testClassName" : "org.xmlcml.euclid.test.Int2RangeTest",
  "testMethodName" : "testIntersectionWith",
  "testOutcomes" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
  "coverageElementTestOutcomes" : {
    "Decision(true, IF, 0, org.xmlcml.euclid.Int2Range)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Decision(false, IF, 7, org.xmlcml.euclid.Int2Range)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 0, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.IntRange.toString()\" because \"this.xrange\" is null <org.xmlcml.euclid.Int2Range.toString(Int2Range.java:378)>)" ],
    "Stmt(EXPRESSION, 0, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.IntRange.toString()\" because \"this.xrange\" is null <org.xmlcml.euclid.Int2Range.toString(Int2Range.java:378)>)" ],
    "Stmt(EXPRESSION, 1, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.IntRange.toString()\" because \"this.yrange\" is null <org.xmlcml.euclid.Int2Range.toString(Int2Range.java:378)>)" ],
    "Stmt(EXPRESSION, 1, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.IntRange.toString()\" because \"this.yrange\" is null <org.xmlcml.euclid.Int2Range.toString(Int2Range.java:378)>)" ],
    "Stmt(IF, 2, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 2, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 3, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(1, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 3, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 4, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 4, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 10, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 10, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.IntRange.intersectionWith(org.xmlcml.euclid.IntRange)\" because the return value of \"org.xmlcml.euclid.Int2Range.getXRange()\" is null <org.xmlcml.euclid.Int2Range.intersectionWith(Int2Range.java:225)>)" ],
    "Stmt(IF, 27, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.IntRange.intersectionWith(org.xmlcml.euclid.IntRange)\" because the return value of \"org.xmlcml.euclid.Int2Range.getXRange()\" is null <org.xmlcml.euclid.Int2Range.intersectionWith(Int2Range.java:225)>)" ],
    "Stmt(IF, 27, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.IntRange.intersectionWith(org.xmlcml.euclid.IntRange)\" because the return value of \"org.xmlcml.euclid.Int2Range.getXRange()\" is null <org.xmlcml.euclid.Int2Range.intersectionWith(Int2Range.java:225)>)" ],
    "Stmt(RETURN, 29, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 29, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 30, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 30, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 31, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 31, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 32, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 32, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 33, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 33, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<([(2,4),(12,14)])> but was:<([NULL,NULL])> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 52, org.xmlcml.euclid.Int2Range, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: plus expected:<[((2,4),(12,14))]> but was:<[]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 52, org.xmlcml.euclid.Int2Range, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, org.junit.ComparisonFailure: plus expected:<[((2,4),(12,14))]> but was:<[A]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ]
  },
  "timeTaken" : 21
}