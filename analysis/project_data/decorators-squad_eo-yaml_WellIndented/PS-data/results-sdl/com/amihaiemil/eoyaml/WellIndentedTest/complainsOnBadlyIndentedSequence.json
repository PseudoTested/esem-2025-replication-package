{
  "testClassName" : "com.amihaiemil.eoyaml.WellIndentedTest",
  "testMethodName" : "complainsOnBadlyIndentedSequence",
  "testOutcomes" : [ "PASSED(1)", "PASSED(1)", "PASSED(1)" ],
  "coverageElementTestOutcomes" : {
    "Decision(true, IF, 0, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(true, LOOP, 1, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(true, IF, 2, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(false, IF, 3, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(false, IF, 4, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(true, IF, 5, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(false, IF, 6, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(true, IF, 7, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(false, IF, 7, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(1, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Decision(true, IF, 8, com.amihaiemil.eoyaml.WellIndented)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 0, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.NullPointerException> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 0, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.NullPointerException> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 1, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 1, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 2, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 2, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 3, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 3, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(WHILE, 4, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(WHILE, 4, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 5, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 5, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 6, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 6, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 8, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 8, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 11, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 11, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 12, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 12, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 13, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 13, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 14, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(IF, 14, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(THROW, 15, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(THROW, 15, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 18, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 18, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 19, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 19, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 20, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 20, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 21, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(EXPRESSION, 21, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 22, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 22, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 24, com.amihaiemil.eoyaml.WellIndented, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ],
    "Stmt(VARIABLE_DECLARATION, 24, com.amihaiemil.eoyaml.WellIndented, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.Exception: Unexpected exception, expected<com.amihaiemil.eoyaml.exceptions.YamlIndentationException> but was<java.lang.AssertionError> <org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:30)>)" ]
  },
  "timeTaken" : 35
}