{
  "testClassName" : "org.xmlcml.euclid.test.IntSquareMatrixTest",
  "testMethodName" : "testTranspose",
  "testOutcomes" : [ "PASSED(1)", "PASSED(0)", "PASSED(0)" ],
  "coverageElementTestOutcomes" : {
    "Decision(true, LOOP, 24, org.xmlcml.euclid.IntSquareMatrix)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Decision(false, LOOP, 24, org.xmlcml.euclid.IntSquareMatrix)" : [ "TIMED_OUT(200)" ],
    "Decision(true, LOOP, 25, org.xmlcml.euclid.IntSquareMatrix)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Decision(false, LOOP, 25, org.xmlcml.euclid.IntSquareMatrix)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 67, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 67, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 68, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 68, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(EXPRESSION, 69, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(EXPRESSION, 69, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(EXPRESSION, 70, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(EXPRESSION, 70, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(VARIABLE_DECLARATION, 71, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(VARIABLE_DECLARATION, 71, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: transpose; unequal element at (2, 0), (8 != 3) <junit.framework.Assert.fail(Assert.java:57)>)" ]
  },
  "timeTaken" : 218
}