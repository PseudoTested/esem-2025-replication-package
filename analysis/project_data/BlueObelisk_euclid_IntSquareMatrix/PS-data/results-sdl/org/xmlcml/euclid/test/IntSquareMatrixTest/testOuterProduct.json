{
  "testClassName" : "org.xmlcml.euclid.test.IntSquareMatrixTest",
  "testMethodName" : "testOuterProduct",
  "testOutcomes" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
  "coverageElementTestOutcomes" : {
    "Decision(true, LOOP, 0, org.xmlcml.euclid.IntSquareMatrix)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Decision(false, LOOP, 0, org.xmlcml.euclid.IntSquareMatrix)" : [ "TIMED_OUT(200)" ],
    "Decision(true, LOOP, 1, org.xmlcml.euclid.IntSquareMatrix)" : [ "THREW_EXCEPTION(1, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Decision(false, LOOP, 1, org.xmlcml.euclid.IntSquareMatrix)" : [ "THREW_EXCEPTION(1, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 0, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 0, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 1, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(FOR, 1, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(EXPRESSION, 2, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(EXPRESSION, 2, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, junit.framework.AssertionFailedError: outer product; unequal element at (2, 0), (3 != 0) <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(RETURN, 3, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product expected:<IntMatrix> but was:<null> <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(RETURN, 3, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product expected:<IntMatrix> but was:<null> <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(VARIABLE_DECLARATION, 4, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(1, junit.framework.AssertionFailedError: outer product; unequal rows in matrices expected:<3> but was:<0> <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(VARIABLE_DECLARATION, 4, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product; unequal rows in matrices expected:<3> but was:<0> <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(VARIABLE_DECLARATION, 5, org.xmlcml.euclid.IntSquareMatrix, DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product expected:<IntMatrix> but was:<null> <junit.framework.Assert.fail(Assert.java:57)>)" ],
    "Stmt(VARIABLE_DECLARATION, 5, org.xmlcml.euclid.IntSquareMatrix, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, junit.framework.AssertionFailedError: outer product expected:<IntMatrix> but was:<null> <junit.framework.Assert.fail(Assert.java:57)>)" ]
  },
  "timeTaken" : 222
}