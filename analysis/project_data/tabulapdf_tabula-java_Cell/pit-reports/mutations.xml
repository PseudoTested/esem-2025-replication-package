<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ltechnology/tabula/CellPosition;)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ltechnology/tabula/CellPosition;)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ltechnology/tabula/CellPosition;)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ltechnology/tabula/CellPosition;)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ltechnology/tabula/CellPosition;)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>24</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced int return with 0 for technology/tabula/CellPosition::compareTo</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>22</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>37</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>42</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>22</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>37</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>42</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced boolean return with false for technology/tabula/CellPosition::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>14</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced boolean return with true for technology/tabula/CellPosition::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>24</index></indexes><blocks><block>7</block></blocks><killingTest/><description>replaced boolean return with true for technology/tabula/CellPosition::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>50</index></indexes><blocks><block>12</block></blocks><killingTest/><description>replaced boolean return with true for technology/tabula/CellPosition::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>9</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Table.java</sourceFile><mutatedClass>technology.tabula.CellPosition</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>10</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for technology/tabula/CellPosition::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(FFFF)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to technology/tabula/Cell::setPlaceholder</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(FFFF)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>18</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to technology/tabula/Cell::setSpanning</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/awt/geom/Point2D;Ljava/awt/geom/Point2D;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>14</index></indexes><blocks><block>4</block></blocks><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/awt/geom/Point2D;Ljava/awt/geom/Point2D;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>20</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/awt/geom/Point2D;Ljava/awt/geom/Point2D;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>27</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to technology/tabula/Cell::setPlaceholder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/awt/geom/Point2D;Ljava/awt/geom/Point2D;)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>32</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to technology/tabula/Cell::setSpanning</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for technology/tabula/Cell::getText</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>58</index></indexes><blocks><block>14</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><indexes><index>52</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><indexes><index>52</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><indexes><index>58</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><indexes><index>58</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to java/util/List::sort</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>getText</mutatedMethod><methodDescription>(Z)Ljava/lang/String;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>88</index></indexes><blocks><block>23</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for technology/tabula/Cell::getText</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>isPlaceholder</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>technology.tabula.TestCell.testIsPlaceholder(technology.tabula.TestCell)</killingTest><description>replaced boolean return with false for technology/tabula/Cell::isPlaceholder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>isPlaceholder</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>technology.tabula.TestCell.testIsPlaceholder(technology.tabula.TestCell)</killingTest><description>replaced boolean return with true for technology/tabula/Cell::isPlaceholder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>isSpanning</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>technology.tabula.TestCell.testIsSpanning(technology.tabula.TestCell)</killingTest><description>replaced boolean return with false for technology/tabula/Cell::isSpanning</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Cell.java</sourceFile><mutatedClass>technology.tabula.Cell</mutatedClass><mutatedMethod>isSpanning</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>technology.tabula.TestCell.testIsSpanning(technology.tabula.TestCell)</killingTest><description>replaced boolean return with true for technology/tabula/Cell::isSpanning</description></mutation>
</mutations>
