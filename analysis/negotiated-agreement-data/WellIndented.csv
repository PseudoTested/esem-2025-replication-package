covered_ps,covgap_slicer4j_slice,covgap_porbs_slice,pseudotested_ps,statement_type,line_no,Original Code,What is the purpose of this code?,Notes
FALSE,FALSE,FALSE,FALSE,,1,/**,,
FALSE,FALSE,FALSE,FALSE,,2,"* Copyright (c) 2016-2024, Mihai Emil Andronache",,
FALSE,FALSE,FALSE,FALSE,,3,* All rights reserved.,,
FALSE,FALSE,FALSE,FALSE,,4,*,,
FALSE,FALSE,FALSE,FALSE,,5,"* Redistribution and use in source and binary forms, with or without",,
FALSE,FALSE,FALSE,FALSE,,6,"*  modification, are permitted provided that the following conditions are met:",,
FALSE,FALSE,FALSE,FALSE,,7,"* Redistributions of source code must retain the above copyright notice, this",,
FALSE,FALSE,FALSE,FALSE,,8,*  list of conditions and the following disclaimer.,,
FALSE,FALSE,FALSE,FALSE,,9,"*  Redistributions in binary form must reproduce the above copyright notice,",,
FALSE,FALSE,FALSE,FALSE,,10,*  this list of conditions and the following disclaimer in the documentation,,
FALSE,FALSE,FALSE,FALSE,,11,*  and/or other materials provided with the distribution.,,
FALSE,FALSE,FALSE,FALSE,,12,* Neither the name of the copyright holder nor the names of its,,
FALSE,FALSE,FALSE,FALSE,,13,*  contributors may be used to endorse or promote products derived from,,
FALSE,FALSE,FALSE,FALSE,,14,*  this software without specific prior written permission.,,
FALSE,FALSE,FALSE,FALSE,,15,"* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS""",,
FALSE,FALSE,FALSE,FALSE,,16,"* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",,
FALSE,FALSE,FALSE,FALSE,,17,* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE,,
FALSE,FALSE,FALSE,FALSE,,18,* ARE,,
FALSE,FALSE,FALSE,FALSE,,19,* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE,,
FALSE,FALSE,FALSE,FALSE,,20,"* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL",,
FALSE,FALSE,FALSE,FALSE,,21,"* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR",,
FALSE,FALSE,FALSE,FALSE,,22,"* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",,
FALSE,FALSE,FALSE,FALSE,,23,"* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",,
FALSE,FALSE,FALSE,FALSE,,24,"* LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY",,
FALSE,FALSE,FALSE,FALSE,,25,"* OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF",,
FALSE,FALSE,FALSE,FALSE,,26,* SUCH DAMAGE.,,
FALSE,FALSE,FALSE,FALSE,,27,*/,,
FALSE,FALSE,FALSE,FALSE,,28,package com.amihaiemil.eoyaml;,,
FALSE,FALSE,FALSE,FALSE,,29,,,
FALSE,FALSE,FALSE,FALSE,,30,import com.amihaiemil.eoyaml.exceptions.YamlIndentationException;,,
FALSE,FALSE,FALSE,FALSE,,31,import java.util.ArrayList;,,
FALSE,FALSE,FALSE,FALSE,,32,import java.util.Iterator;,,
FALSE,FALSE,FALSE,FALSE,,33,import java.util.List;,,
FALSE,FALSE,FALSE,FALSE,,34,,,
FALSE,FALSE,FALSE,FALSE,,35,/**,,
FALSE,FALSE,FALSE,FALSE,,36,* YamlLines decorator which iterates over them and verifies,,
FALSE,FALSE,FALSE,FALSE,,37,* that their indentation is correct.<br><br>,,
FALSE,FALSE,FALSE,FALSE,,38,*,,
FALSE,FALSE,FALSE,FALSE,,39,* This class can be used as follows:,,
FALSE,FALSE,FALSE,FALSE,,40,*,,
FALSE,FALSE,FALSE,FALSE,,41,* <pre>,,
FALSE,FALSE,FALSE,FALSE,,42,*,,
FALSE,FALSE,FALSE,FALSE,,43,* YamlLines wellIndented = new SameIndentationLevel(,,
FALSE,FALSE,FALSE,FALSE,,44,*     new WellIndented(lines),,
FALSE,FALSE,FALSE,FALSE,,45,* );//Iterate over the lines which are at the same indentation level,,
FALSE,FALSE,FALSE,FALSE,,46,* </pre>,,
FALSE,FALSE,FALSE,FALSE,,47,* or,,
FALSE,FALSE,FALSE,FALSE,,48,* <pre>,,
FALSE,FALSE,FALSE,FALSE,,49,*,,
FALSE,FALSE,FALSE,FALSE,,50,* YamlLines wellIndented = new SameIndentationLevel(,,
FALSE,FALSE,FALSE,FALSE,,51,*     new WellIndented(,,
FALSE,FALSE,FALSE,FALSE,,52,*         new NoDirectivesOrMarkers(,,
FALSE,FALSE,FALSE,FALSE,,53,*             lines,,
FALSE,FALSE,FALSE,FALSE,,54,*         )//ignore markers or directives,,
FALSE,FALSE,FALSE,FALSE,,55,*     ),,
FALSE,FALSE,FALSE,FALSE,,56,* );//Iterate over the lines which are at the same indentation level,,
FALSE,FALSE,FALSE,FALSE,,57,* </pre>,,
FALSE,FALSE,FALSE,FALSE,,58,* @checkstyle ExecutableStatementCount (400 lines),,
FALSE,FALSE,FALSE,FALSE,,59,* @checkstyle CyclomaticComplexity (400 lines),,
FALSE,FALSE,FALSE,FALSE,,60,* @checkstyle NestedIfDepth (400 lines),,
FALSE,FALSE,FALSE,FALSE,,61,* @author Mihai Andronache (amihaiemil@gmail.com),,
FALSE,FALSE,FALSE,FALSE,,62,* @version $Id: 0101ae4d063a6134305870983e6e436c7f0f3a19 $,,
FALSE,FALSE,FALSE,FALSE,,63,* @since 3.1.2,,
FALSE,FALSE,FALSE,FALSE,,64,*/,,
FALSE,FALSE,FALSE,FALSE,,65,final class WellIndented implements YamlLines {,,
FALSE,FALSE,FALSE,FALSE,,66,,,
FALSE,FALSE,FALSE,FALSE,,67,/**,,
FALSE,FALSE,FALSE,FALSE,,68,* YamlLines.,,
FALSE,FALSE,FALSE,FALSE,,69,*/,,
FALSE,FALSE,FALSE,FALSE,,70,private final YamlLines yamlLines;,,
FALSE,FALSE,FALSE,FALSE,,71,,,
FALSE,FALSE,FALSE,FALSE,,72,/**,,
FALSE,FALSE,FALSE,FALSE,,73,* Ctor.,,
FALSE,FALSE,FALSE,FALSE,,74,* @param yamlLines The Yaml lines.,,
FALSE,FALSE,FALSE,FALSE,,75,*/,,
FALSE,FALSE,FALSE,FALSE,,76,WellIndented(final YamlLines yamlLines) {,,
TRUE,FALSE,FALSE,FALSE,EXPRESSION,77,this.yamlLines = yamlLines;,,
FALSE,FALSE,FALSE,FALSE,,78,},,
FALSE,FALSE,FALSE,FALSE,,79,,,
FALSE,FALSE,FALSE,FALSE,,80,/**,,
FALSE,FALSE,FALSE,FALSE,,81,* Returns an iterator over these Yaml lines.,,
FALSE,FALSE,FALSE,FALSE,,82,* It will verify that each line is properly indented in relation,,
FALSE,FALSE,FALSE,FALSE,,83,* to the previous one and will complain if the indentation is not,,
FALSE,FALSE,FALSE,FALSE,,84,* correct.,,
FALSE,FALSE,FALSE,FALSE,,85,* @checkstyle LineLength (50 lines),,
FALSE,FALSE,FALSE,FALSE,,86,* @return Iterator over these yaml lines.,,
FALSE,FALSE,FALSE,FALSE,,87,*/,,
FALSE,FALSE,FALSE,FALSE,,88,@Override,,
FALSE,FALSE,FALSE,FALSE,,89,public Iterator<YamlLine> iterator() {,,
FALSE,FALSE,FALSE,FALSE,,90,final Iterator<YamlLine> iterator = this.yamlLines.iterator();,,
FALSE,FALSE,FALSE,FALSE,,91,final List<YamlLine> wellIndented = new ArrayList<>();,,
FALSE,FALSE,FALSE,FALSE,,92,YamlLine previous;,,
TRUE,TRUE,FALSE,FALSE,VARIABLE_DECLARATION,93,boolean withinBlockScalar = false;,State Initialization,
TRUE,TRUE,FALSE,FALSE,IF,94,if(iterator.hasNext()) {,Iteration,
TRUE,TRUE,FALSE,FALSE,EXPRESSION,95,previous = iterator.next();,Iteration,
TRUE,TRUE,FALSE,FALSE,EXPRESSION,96,wellIndented.add(previous);,Iteration,
TRUE,TRUE,FALSE,FALSE,WHILE,97,while(iterator.hasNext()) {,Iteration,
TRUE,TRUE,FALSE,FALSE,VARIABLE_DECLARATION,98,YamlLine line = iterator.next();,Iteration,
TRUE,TRUE,FALSE,FALSE,IF,99,if(!(previous instanceof YamlLine.NullYamlLine)) {,State Check,
FALSE,FALSE,FALSE,FALSE,IF,100,final CharSequence prevLineLastChar =,,
FALSE,FALSE,FALSE,FALSE,IF,101,previous.trimmed().substring(previous.trimmed().length() - 1);,,
TRUE,TRUE,TRUE,FALSE,IF,102,"if("">|"".contains(prevLineLastChar)) {",Special Case Check,
FALSE,FALSE,FALSE,FALSE,EXPRESSION,103,withinBlockScalar = true;,,
FALSE,FALSE,FALSE,FALSE,IF,104,},,
TRUE,TRUE,FALSE,FALSE,VARIABLE_DECLARATION,105,int prevIndent = previous.indentation();,Data Loading,
TRUE,TRUE,TRUE,FALSE,IF,106,"if(previous.trimmed().matches(""^\\s*-.*:(|\\s.*)$"")",Special Case Check,
FALSE,FALSE,FALSE,FALSE,IF,107,"|| previous.trimmed().matches(""^\\s*-.*-(|\\s.*)$"")) {",,
FALSE,FALSE,FALSE,FALSE,EXPRESSION,108,withinBlockScalar = false;,,
FALSE,FALSE,FALSE,FALSE,EXPRESSION,109,prevIndent += 2;,,
FALSE,FALSE,FALSE,FALSE,IF,110,},,
TRUE,TRUE,FALSE,FALSE,IF,111,if(!withinBlockScalar) {,State Check,
TRUE,TRUE,FALSE,FALSE,VARIABLE_DECLARATION,112,int lineIndent = line.indentation();,State Initialization,
TRUE,TRUE,FALSE,FALSE,IF,113,if (previous.requireNestedIndentation()) {,State Check,
FALSE,FALSE,FALSE,FALSE,IF,114,if (lineIndent < prevIndent + 2) {,,
FALSE,FALSE,FALSE,FALSE,THROW,115,throw new YamlIndentationException(,,
FALSE,FALSE,FALSE,FALSE,THROW,116,Indentation of line  + (line.number() + 1),,
FALSE,FALSE,FALSE,FALSE,THROW,117,"=+ "" ["" + line.trimmed() + ""'""",,
FALSE,FALSE,FALSE,FALSE,THROW,118, is not ok. It should be greater than the one,,
FALSE,FALSE,FALSE,FALSE,THROW,119,"=+ "" of line "" + (previous.number() + 1)",,
FALSE,FALSE,FALSE,FALSE,THROW,120,"=+ "" ["" + previous.trimmed() + ""]""",,
FALSE,FALSE,FALSE,FALSE,THROW,121, by at least 2 spaces.,,
FALSE,FALSE,FALSE,FALSE,THROW,122,);,,
FALSE,FALSE,FALSE,FALSE,IF,123,},,
FALSE,FALSE,FALSE,FALSE,IF,124,} else {,,
TRUE,TRUE,FALSE,FALSE,IF,125,"if (!""---"".equals(previous.trimmed()) && lineIndent > prevIndent) {",State Check,
TRUE,TRUE,FALSE,FALSE,IF,126,"if (!"":"".contains(prevLineLastChar)) {",State Check,
TRUE,TRUE,FALSE,FALSE,THROW,127,throw new YamlIndentationException(,Throw Exception,
FALSE,FALSE,FALSE,FALSE,THROW,128,Indentation of line  + (line.number() + 1),,
FALSE,FALSE,FALSE,FALSE,THROW,129,"=+ "" ["" + line.trimmed() + ""]""",,
FALSE,FALSE,FALSE,FALSE,THROW,130, is greater than the one of line ,,
FALSE,FALSE,FALSE,FALSE,THROW,131,=+ (previous.number() + 1),,
FALSE,FALSE,FALSE,FALSE,THROW,132,"=+ "" ["" + previous.trimmed() + ""]. """,,
FALSE,FALSE,FALSE,FALSE,THROW,133,It should be less or equal.,,
FALSE,FALSE,FALSE,FALSE,THROW,134,);,,
FALSE,FALSE,FALSE,FALSE,IF,135,},,
FALSE,FALSE,FALSE,FALSE,IF,136,},,
FALSE,FALSE,FALSE,FALSE,IF,137,},,
FALSE,FALSE,FALSE,FALSE,IF,138,},,
FALSE,FALSE,FALSE,FALSE,IF,139,},,
TRUE,TRUE,FALSE,FALSE,EXPRESSION,140,previous = line;,State Update,
TRUE,TRUE,FALSE,FALSE,EXPRESSION,141,wellIndented.add(line);,Output Update,
FALSE,FALSE,FALSE,FALSE,WHILE,142,},,
FALSE,FALSE,FALSE,FALSE,IF,143,},,
TRUE,TRUE,FALSE,FALSE,RETURN,144,return wellIndented.iterator();,Output return,
FALSE,FALSE,FALSE,FALSE,,145,},,
FALSE,FALSE,FALSE,FALSE,,146,,,
FALSE,FALSE,FALSE,FALSE,,147,@Override,,
FALSE,FALSE,FALSE,FALSE,,148,public YamlNode nextYamlNode(final YamlLine prev) {,,
TRUE,FALSE,FALSE,FALSE,RETURN,149,return this.yamlLines.nextYamlNode(prev);,,
FALSE,FALSE,FALSE,FALSE,,150,},,
FALSE,FALSE,FALSE,FALSE,,151,,,
FALSE,FALSE,FALSE,FALSE,,152,},,