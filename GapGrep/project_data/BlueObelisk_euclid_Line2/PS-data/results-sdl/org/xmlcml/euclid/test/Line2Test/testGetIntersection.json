{
  "testClassName" : "org.xmlcml.euclid.test.Line2Test",
  "testMethodName" : "testGetIntersection",
  "testOutcomes" : [ "PASSED(0)", "PASSED(0)", "PASSED(1)" ],
  "coverageElementTestOutcomes" : {
    "Decision(false, IF, 0, org.xmlcml.euclid.Line2)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Decision(false, IF, 1, org.xmlcml.euclid.Line2)" : [ "THREW_EXCEPTION(1, org.xmlcml.euclid.EuclidRuntimeException: Cannot form line from coincident points <org.xmlcml.euclid.Line2.<init>(Line2.java:105)>)" ],
    "Decision(true, IF, 8, org.xmlcml.euclid.Line2)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Decision(false, IF, 8, org.xmlcml.euclid.Line2)" : [ "FAILED(0)" ],
    "Stmt(EXPRESSION, 0, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException <Stack trace unavailable. Re-run with -XX:-OmitStackTraceInFastThrow>)" ],
    "Stmt(EXPRESSION, 0, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException <Stack trace unavailable. Re-run with -XX:-OmitStackTraceInFastThrow>)" ],
    "Stmt(EXPRESSION, 1, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Real2.subtract(org.xmlcml.euclid.Real2)\" because \"this.to\" is null <org.xmlcml.euclid.Line2.createVector(Line2.java:73)>)" ],
    "Stmt(EXPRESSION, 1, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Real2.subtract(org.xmlcml.euclid.Real2)\" because \"this.to\" is null <org.xmlcml.euclid.Line2.createVector(Line2.java:73)>)" ],
    "Stmt(EXPRESSION, 2, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getPerpProduct(org.xmlcml.euclid.Vector2)\" because \"this.vector\" is null <org.xmlcml.euclid.Line2.getIntersection(Line2.java:222)>)" ],
    "Stmt(EXPRESSION, 2, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getPerpProduct(org.xmlcml.euclid.Vector2)\" because \"this.vector\" is null <org.xmlcml.euclid.Line2.getIntersection(Line2.java:222)>)" ],
    "Stmt(EXPRESSION, 3, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 3, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 4, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getPerpProduct(org.xmlcml.euclid.Vector2)\" because \"this.vector\" is null <org.xmlcml.euclid.Line2.getIntersection(Line2.java:222)>)" ],
    "Stmt(EXPRESSION, 4, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getPerpProduct(org.xmlcml.euclid.Vector2)\" because \"this.vector\" is null <org.xmlcml.euclid.Line2.getIntersection(Line2.java:222)>)" ],
    "Stmt(IF, 5, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(IF, 5, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 7, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 7, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 8, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 8, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 9, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(1)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 9, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(IF, 10, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(IF, 10, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(1)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 12, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException <Stack trace unavailable. Re-run with -XX:-OmitStackTraceInFastThrow>)" ],
    "Stmt(EXPRESSION, 12, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException <Stack trace unavailable. Re-run with -XX:-OmitStackTraceInFastThrow>)" ],
    "Stmt(EXPRESSION, 13, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getY()\" because \"v\" is null <org.xmlcml.euclid.Vector2.getPerpProduct(Vector2.java:93)>)" ],
    "Stmt(EXPRESSION, 13, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getY()\" because \"v\" is null <org.xmlcml.euclid.Vector2.getPerpProduct(Vector2.java:93)>)" ],
    "Stmt(EXPRESSION, 14, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(EXPRESSION, 14, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(IF, 32, org.xmlcml.euclid.Line2, DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(IF, 32, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "FAILED(1)" ],
    "Stmt(EXPRESSION, 33, org.xmlcml.euclid.Line2, DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(EXPRESSION, 33, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 34, org.xmlcml.euclid.Line2, DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 34, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 35, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getY()\" because \"v\" is null <org.xmlcml.euclid.Vector2.getPerpProduct(Vector2.java:93)>)" ],
    "Stmt(VARIABLE_DECLARATION, 35, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.NullPointerException: Cannot invoke \"org.xmlcml.euclid.Vector2.getY()\" because \"v\" is null <org.xmlcml.euclid.Vector2.getPerpProduct(Vector2.java:93)>)" ],
    "Stmt(VARIABLE_DECLARATION, 36, org.xmlcml.euclid.Line2, DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 36, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 37, org.xmlcml.euclid.Line2, DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 37, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "FAILED(1)" ],
    "Stmt(VARIABLE_DECLARATION, 38, org.xmlcml.euclid.Line2, DEFAULT)" : [ "THREW_EXCEPTION(1, java.lang.NullPointerException: Cannot read field \"x\" because \"r2\" is null <org.xmlcml.euclid.Real2.plus(Real2.java:232)>)" ],
    "Stmt(VARIABLE_DECLARATION, 38, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot read field \"x\" because \"r2\" is null <org.xmlcml.euclid.Real2.plus(Real2.java:232)>)" ],
    "Stmt(EXPRESSION, 39, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(1)" ],
    "Stmt(EXPRESSION, 39, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(RETURN, 40, org.xmlcml.euclid.Line2, DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(RETURN, 40, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "FAILED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 41, org.xmlcml.euclid.Line2, DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
    "Stmt(VARIABLE_DECLARATION, 41, org.xmlcml.euclid.Line2, NON_DEFAULT)" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ]
  },
  "timeTaken" : 44
}