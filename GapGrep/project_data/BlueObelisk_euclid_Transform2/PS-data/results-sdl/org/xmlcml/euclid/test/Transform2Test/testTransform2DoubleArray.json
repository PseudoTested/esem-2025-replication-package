{
  "testClassName" : "org.xmlcml.euclid.test.Transform2Test",
  "testMethodName" : "testTransform2DoubleArray",
  "testOutcomes" : [ "PASSED(0)", "PASSED(0)", "PASSED(0)" ],
  "coverageElementTestOutcomes" : {
    "Decision(true, LOOP, 0, org.xmlcml.euclid.Transform2)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Decision(false, LOOP, 0, org.xmlcml.euclid.Transform2)" : [ "THREW_EXCEPTION(0, java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3 <org.xmlcml.euclid.Transform2.<init>(Transform2.java:110)>)" ],
    "Decision(true, IF, 18, org.xmlcml.euclid.Transform2)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Decision(true, IF, 19, org.xmlcml.euclid.Transform2)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Decision(false, IF, 19, org.xmlcml.euclid.Transform2)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Decision(false, IF, 20, org.xmlcml.euclid.Transform2)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[none]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Decision(true, IF, 21, org.xmlcml.euclid.Transform2)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(FOR, 0, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(FOR, 0, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 1, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 1, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 2, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 2, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(1, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(EXPRESSION, 43, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot read field \"s\" because the return value of \"org.xmlcml.euclid.Transform2.getTransformationType()\" is null <org.xmlcml.euclid.test.Transform2Test.testTransform2DoubleArray(Transform2Test.java:196)>)" ],
    "Stmt(EXPRESSION, 43, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot read field \"s\" because the return value of \"org.xmlcml.euclid.Transform2.getTransformationType()\" is null <org.xmlcml.euclid.test.Transform2Test.testTransform2DoubleArray(Transform2Test.java:196)>)" ],
    "Stmt(RETURN, 124, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot read field \"s\" because the return value of \"org.xmlcml.euclid.Transform2.getTransformationType()\" is null <org.xmlcml.euclid.test.Transform2Test.testTransform2DoubleArray(Transform2Test.java:196)>)" ],
    "Stmt(RETURN, 124, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, java.lang.NullPointerException: Cannot read field \"s\" because the return value of \"org.xmlcml.euclid.Transform2.getTransformationType()\" is null <org.xmlcml.euclid.test.Transform2Test.testTransform2DoubleArray(Transform2Test.java:196)>)" ],
    "Stmt(IF, 125, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 125, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 126, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 126, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 127, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 127, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 128, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 128, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 130, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(IF, 130, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 131, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(RETURN, 131, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 140, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 140, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 141, org.xmlcml.euclid.Transform2, DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ],
    "Stmt(VARIABLE_DECLARATION, 141, org.xmlcml.euclid.Transform2, NON_DEFAULT)" : [ "THREW_EXCEPTION(0, org.junit.ComparisonFailure: transform2 expected:<[rotation about origin]> but was:<[any]> <org.junit.Assert.assertEquals(Assert.java:117)>)" ]
  },
  "timeTaken" : 17
}